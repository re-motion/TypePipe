<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <ProjectType>Library</ProjectType>
  </PropertyGroup>

  <Import Project="..\Shared.build.props" />

  <PropertyGroup>
    <AssemblyTitle>re-motion TypePipe</AssemblyTitle>
    <Description>Provides a high-level API for type generation based on expression trees.
Key features:
- Type modifications through subclass proxies
- Libraries can independently add modifications to any single type
- Reflection.Emit code generator
- Support for adding other code generators</Description>
    <AssemblyName>Remotion.TypePipe</AssemblyName>
    <RootNamespace>$(AssemblyName)</RootNamespace>
    <PackageTags>re-motion TypePipe code generation expression trees msil</PackageTags>
  </PropertyGroup>

  <!--
  https://stackoverflow.com/questions/61390507/t4-templates-not-transformed-during-build
  <ItemGroup>
    <Compile Include="Implementation\ParamListImplementation.cs">
      <DependentUpon>ParamListImplementation.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Implementation\ParamListImplementation.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ParamListImplementation.cs</LastGenOutput>
    </None>
    <Compile Include="ParamList.cs">
      <DependentUpon>ParamList.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="ParamList.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ParamList.cs</LastGenOutput>
    </None>
  </ItemGroup>
  -->

  <ItemGroup>
    <EmbeddedResource Include="StrongNaming\FallbackKey.snk" />
    <None Include="doc\include\GettingStartedWithTypePipe.aml" />
    <None Include="doc\include\Remotion.TypePipe.NamespaceDoc.xml" />
  </ItemGroup>

</Project>
